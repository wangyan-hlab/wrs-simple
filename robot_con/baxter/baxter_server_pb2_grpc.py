# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import baxter_server_pb2 as baxter__server__pb2


class BaxterServerStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.bxt_set_gripper = channel.unary_unary(
        '/BaxterServer/bxt_set_gripper',
        request_serializer=baxter__server__pb2.Gripper_pos_armname.SerializeToString,
        response_deserializer=baxter__server__pb2.Empty.FromString,
        )
    self.bxt_get_gripper = channel.unary_unary(
        '/BaxterServer/bxt_get_gripper',
        request_serializer=baxter__server__pb2.Armname.SerializeToString,
        response_deserializer=baxter__server__pb2.Gripper_pos.FromString,
        )
    self.bxt_get_jnts = channel.unary_unary(
        '/BaxterServer/bxt_get_jnts',
        request_serializer=baxter__server__pb2.Armname.SerializeToString,
        response_deserializer=baxter__server__pb2.Jnt_angles.FromString,
        )
    self.bxt_movejnts_cont = channel.unary_unary(
        '/BaxterServer/bxt_movejnts_cont',
        request_serializer=baxter__server__pb2.Jnt_angles_armname.SerializeToString,
        response_deserializer=baxter__server__pb2.Empty.FromString,
        )
    self.bxt_movejnts = channel.unary_unary(
        '/BaxterServer/bxt_movejnts',
        request_serializer=baxter__server__pb2.Jnt_angles_armname.SerializeToString,
        response_deserializer=baxter__server__pb2.Empty.FromString,
        )
    self.bxt_get_force = channel.unary_unary(
        '/BaxterServer/bxt_get_force',
        request_serializer=baxter__server__pb2.Armname.SerializeToString,
        response_deserializer=baxter__server__pb2.ListData.FromString,
        )
    self.bxt_get_image = channel.unary_unary(
        '/BaxterServer/bxt_get_image',
        request_serializer=baxter__server__pb2.Camera_name.SerializeToString,
        response_deserializer=baxter__server__pb2.ListData.FromString,
        )


class BaxterServerServicer(object):
  """The greeting service definition.
  """

  def bxt_set_gripper(self, request, context):
    """gripper control
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def bxt_get_gripper(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def bxt_get_jnts(self, request, context):
    """jnts
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def bxt_movejnts_cont(self, request, context):
    """move to indicated jnt_angles
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def bxt_movejnts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def bxt_get_force(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def bxt_get_image(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BaxterServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'bxt_set_gripper': grpc.unary_unary_rpc_method_handler(
          servicer.bxt_set_gripper,
          request_deserializer=baxter__server__pb2.Gripper_pos_armname.FromString,
          response_serializer=baxter__server__pb2.Empty.SerializeToString,
      ),
      'bxt_get_gripper': grpc.unary_unary_rpc_method_handler(
          servicer.bxt_get_gripper,
          request_deserializer=baxter__server__pb2.Armname.FromString,
          response_serializer=baxter__server__pb2.Gripper_pos.SerializeToString,
      ),
      'bxt_get_jnts': grpc.unary_unary_rpc_method_handler(
          servicer.bxt_get_jnts,
          request_deserializer=baxter__server__pb2.Armname.FromString,
          response_serializer=baxter__server__pb2.Jnt_angles.SerializeToString,
      ),
      'bxt_movejnts_cont': grpc.unary_unary_rpc_method_handler(
          servicer.bxt_movejnts_cont,
          request_deserializer=baxter__server__pb2.Jnt_angles_armname.FromString,
          response_serializer=baxter__server__pb2.Empty.SerializeToString,
      ),
      'bxt_movejnts': grpc.unary_unary_rpc_method_handler(
          servicer.bxt_movejnts,
          request_deserializer=baxter__server__pb2.Jnt_angles_armname.FromString,
          response_serializer=baxter__server__pb2.Empty.SerializeToString,
      ),
      'bxt_get_force': grpc.unary_unary_rpc_method_handler(
          servicer.bxt_get_force,
          request_deserializer=baxter__server__pb2.Armname.FromString,
          response_serializer=baxter__server__pb2.ListData.SerializeToString,
      ),
      'bxt_get_image': grpc.unary_unary_rpc_method_handler(
          servicer.bxt_get_image,
          request_deserializer=baxter__server__pb2.Camera_name.FromString,
          response_serializer=baxter__server__pb2.ListData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'BaxterServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
